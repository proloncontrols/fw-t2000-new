// 4.20.0 0x344cabf4
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_coolingon[]; // BITMAP_COOLINGON_ID = 0, Size: 576x564 pixels
extern const unsigned char image_coolingon_560x560[]; // BITMAP_COOLINGON_560X560_ID = 1, Size: 560x560 pixels
extern const unsigned char image_dark_pageindicator_dot_indicator_large_highlight[]; // BITMAP_DARK_PAGEINDICATOR_DOT_INDICATOR_LARGE_HIGHLIGHT_ID = 2, Size: 44x44 pixels
extern const unsigned char image_dark_pageindicator_dot_indicator_large_normal[]; // BITMAP_DARK_PAGEINDICATOR_DOT_INDICATOR_LARGE_NORMAL_ID = 3, Size: 44x44 pixels
extern const unsigned char image_dark_pageindicator_dot_indicator_small_highlight[]; // BITMAP_DARK_PAGEINDICATOR_DOT_INDICATOR_SMALL_HIGHLIGHT_ID = 4, Size: 15x15 pixels
extern const unsigned char image_dark_pageindicator_dot_indicator_small_normal[]; // BITMAP_DARK_PAGEINDICATOR_DOT_INDICATOR_SMALL_NORMAL_ID = 5, Size: 15x15 pixels
extern const unsigned char image_ecoon[]; // BITMAP_ECOON_ID = 6, Size: 576x564 pixels
extern const unsigned char image_ecoon_560x560[]; // BITMAP_ECOON_560X560_ID = 7, Size: 560x560 pixels
extern const unsigned char image_heatingon[]; // BITMAP_HEATINGON_ID = 8, Size: 576x564 pixels
extern const unsigned char image_heatingon_560x560[]; // BITMAP_HEATINGON_560X560_ID = 9, Size: 560x560 pixels
extern const unsigned char image_prolon_logo_4[]; // BITMAP_PROLON_LOGO_4_ID = 10, Size: 640x184 pixels
extern const unsigned char image_prolon_logo_4_640x640[]; // BITMAP_PROLON_LOGO_4_640X640_ID = 11, Size: 640x640 pixels
extern const unsigned char image_setting[]; // BITMAP_SETTING_ID = 12, Size: 51x50 pixels
extern const unsigned char image_setting50x50[]; // BITMAP_SETTING50X50_ID = 13, Size: 50x50 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_coolingon, 0, 576, 564, 117, 101, 341, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 347, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_coolingon_560x560, 0, 560, 560, 109, 99, 341, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 347, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_pageindicator_dot_indicator_large_highlight, 0, 44, 44, 9, 8, 26, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 28, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_pageindicator_dot_indicator_large_normal, 0, 44, 44, 9, 8, 26, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 28, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_pageindicator_dot_indicator_small_highlight, 0, 15, 15, 3, 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_pageindicator_dot_indicator_small_normal, 0, 15, 15, 3, 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_ecoon, 0, 576, 564, 117, 107, 341, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 341, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_ecoon_560x560, 0, 560, 560, 114, 107, 332, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 337, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_heatingon, 0, 576, 564, 116, 103, 344, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 343, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_heatingon_560x560, 0, 560, 560, 114, 101, 332, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 343, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_prolon_logo_4, 0, 640, 184, 213, 18, 28, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 66, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_prolon_logo_4_640x640, 0, 640, 640, 212, 68, 29, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 219, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_setting, 0, 51, 50, 42, 8, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 32, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_setting50x50, 0, 50, 50, 16, 42, 19, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
