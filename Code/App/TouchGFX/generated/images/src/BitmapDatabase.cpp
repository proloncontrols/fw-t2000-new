// 4.20.0 0xc0594a2c
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_dark_pageindicator_dot_indicator_large_highlight[]; // BITMAP_DARK_PAGEINDICATOR_DOT_INDICATOR_LARGE_HIGHLIGHT_ID = 0, Size: 44x44 pixels
extern const unsigned char image_dark_pageindicator_dot_indicator_large_normal[]; // BITMAP_DARK_PAGEINDICATOR_DOT_INDICATOR_LARGE_NORMAL_ID = 1, Size: 44x44 pixels
extern const unsigned char image_dark_pageindicator_dot_indicator_small_highlight[]; // BITMAP_DARK_PAGEINDICATOR_DOT_INDICATOR_SMALL_HIGHLIGHT_ID = 2, Size: 15x15 pixels
extern const unsigned char image_dark_pageindicator_dot_indicator_small_normal[]; // BITMAP_DARK_PAGEINDICATOR_DOT_INDICATOR_SMALL_NORMAL_ID = 3, Size: 15x15 pixels
extern const unsigned char image_prolon_logo_4[]; // BITMAP_PROLON_LOGO_4_ID = 4, Size: 640x184 pixels
extern const unsigned char image_setting[]; // BITMAP_SETTING_ID = 5, Size: 51x50 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_dark_pageindicator_dot_indicator_large_highlight, 0, 44, 44, 9, 8, 26, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 28, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_pageindicator_dot_indicator_large_normal, 0, 44, 44, 9, 8, 26, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 28, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_pageindicator_dot_indicator_small_highlight, 0, 15, 15, 3, 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_pageindicator_dot_indicator_small_normal, 0, 15, 15, 3, 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_prolon_logo_4, 0, 640, 184, 213, 18, 28, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 66, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_setting, 0, 51, 50, 42, 8, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 32, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
