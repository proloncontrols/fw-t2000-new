/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/ctnrHomeBase.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

ctnrHomeBase::ctnrHomeBase()
{
    setWidth(672);
    setHeight(672);
    CoolingImage.setXY(24, 24);
    CoolingImage.setBitmap(touchgfx::Bitmap(BITMAP_COOLINGON_ID));
    CoolingImage.setWidth(624);
    CoolingImage.setHeight(624);
    CoolingImage.setBitmapPosition(24.0f, 30.0f);
    CoolingImage.setScale(1.0f);
    CoolingImage.setCameraDistance(1000.0f);
    CoolingImage.setOrigo(312.0f, 312.0f, 1000.0f);
    CoolingImage.setCamera(312.0f, 312.0f);
    CoolingImage.setAngles(0.0f, 0.0f, 0.0f);
    CoolingImage.setRenderingAlgorithm(touchgfx::TextureMapper::NEAREST_NEIGHBOR);

    FlakeImage.setXY(308, 440);
    FlakeImage.setBitmap(touchgfx::Bitmap(BITMAP_SNOWFLAKE_ID));
    FlakeImage.setWidth(56);
    FlakeImage.setHeight(56);
    FlakeImage.setBitmapPosition(3.0f, 2.5f);
    FlakeImage.setScale(1.0f);
    FlakeImage.setCameraDistance(1000.0f);
    FlakeImage.setOrigo(90.0f, 90.0f, 1000.0f);
    FlakeImage.setCamera(28.0f, 28.0f);
    FlakeImage.setAngles(0.0f, 0.0f, 0.0f);
    FlakeImage.setRenderingAlgorithm(touchgfx::TextureMapper::NEAREST_NEIGHBOR);

    StandbyImage.setXY(583, 591);
    StandbyImage.setBitmap(touchgfx::Bitmap(BITMAP_STANDBYMODE_ID));
    StandbyImage.setWidth(68);
    StandbyImage.setHeight(61);
    StandbyImage.setBitmapPosition(4.5f, 5.0f);
    StandbyImage.setScale(1.0f);
    StandbyImage.setCameraDistance(1000.0f);
    StandbyImage.setOrigo(34.0f, 30.5f, 1000.0f);
    StandbyImage.setCamera(34.0f, 30.5f);
    StandbyImage.setAngles(0.0f, 0.0f, 0.0f);
    StandbyImage.setRenderingAlgorithm(touchgfx::TextureMapper::NEAREST_NEIGHBOR);

    LogoImage.setXY(0, 24);
    LogoImage.setBitmap(touchgfx::Bitmap(BITMAP_PROLON_40_1_ID));
    LogoImage.setWidth(672);
    LogoImage.setHeight(28);
    LogoImage.setBitmapPosition(248.5f, 0.0f);
    LogoImage.setScale(1.0f);
    LogoImage.setCameraDistance(1000.0f);
    LogoImage.setOrigo(336.0f, 14.0f, 1000.0f);
    LogoImage.setCamera(336.0f, 14.0f);
    LogoImage.setAngles(0.0f, 0.0f, 0.0f);
    LogoImage.setRenderingAlgorithm(touchgfx::TextureMapper::NEAREST_NEIGHBOR);

    DropImage.setXY(100, 616);
    DropImage.setBitmap(touchgfx::Bitmap(BITMAP_HUMIDITY_ID));
    DropImage.setWidth(30);
    DropImage.setHeight(36);
    DropImage.setBitmapPosition(4.5f, 3.0f);
    DropImage.setScale(1.0f);
    DropImage.setCameraDistance(1000.0f);
    DropImage.setOrigo(15.0f, 18.0f, 1000.0f);
    DropImage.setCamera(15.0f, 18.0f);
    DropImage.setAngles(0.0f, 0.0f, 0.0f);
    DropImage.setRenderingAlgorithm(touchgfx::TextureMapper::NEAREST_NEIGHBOR);

    TempUnitText.setXY(412, 199);
    TempUnitText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TempUnitText.setLinespacing(0);
    TempUnitText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KNZR));

    TempFrcText.setXY(412, 308);
    TempFrcText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TempFrcText.setLinespacing(0);
    TempFrcTextBuffer[0] = 0;
    TempFrcText.setWildcard(TempFrcTextBuffer);
    TempFrcText.resizeToCurrentText();
    TempFrcText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZIIQ));

    TempEntText.setXY(160, 157);
    TempEntText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TempEntText.setLinespacing(0);
    TempEntTextBuffer[0] = 0;
    TempEntText.setWildcard(TempEntTextBuffer);
    TempEntText.resizeToCurrentText();
    TempEntText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VBKC));

    HumPercentText.setXY(106, 590);
    HumPercentText.setColor(touchgfx::Color::getColorFromRGB(186, 188, 190));
    HumPercentText.setLinespacing(0);
    HumPercentText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9N3J));

    HumText.setXY(24, 575);
    HumText.setColor(touchgfx::Color::getColorFromRGB(186, 188, 190));
    HumText.setLinespacing(0);
    HumTextBuffer[0] = 0;
    HumText.setWildcard(HumTextBuffer);
    HumText.resizeToCurrentText();
    HumText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZM7M));

    SettingsButton.setBoxWithBorderPosition(0, 0, 50, 50);
    SettingsButton.setBorderSize(0);
    SettingsButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(0, 0, 0));
    SettingsButton.setPosition(596, 25, 50, 50);

    SettingsImage.setXY(596, 25);
    SettingsImage.setBitmap(touchgfx::Bitmap(BITMAP_SETTING_ID));
    SettingsImage.setWidth(50);
    SettingsImage.setHeight(50);
    SettingsImage.setBitmapPosition(-0.5f, 0.0f);
    SettingsImage.setScale(1.0f);
    SettingsImage.setCameraDistance(1000.0f);
    SettingsImage.setOrigo(90.0f, 90.0f, 1000.0f);
    SettingsImage.setCamera(25.0f, 25.0f);
    SettingsImage.setAngles(0.0f, 0.0f, 0.0f);
    SettingsImage.setRenderingAlgorithm(touchgfx::TextureMapper::NEAREST_NEIGHBOR);

    HumText_1.setXY(17, 5);
    HumText_1.setColor(touchgfx::Color::getColorFromRGB(186, 188, 190));
    HumText_1.setLinespacing(0);
    HumText_1Buffer[0] = 0;
    HumText_1.setWildcard(HumText_1Buffer);
    HumText_1.resizeToCurrentText();
    HumText_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H63U));

    image1.setXY(102, 53);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_OUTSIDE_ID));

    HumText_1_1.setXY(98, 21);
    HumText_1_1.setColor(touchgfx::Color::getColorFromRGB(186, 188, 190));
    HumText_1_1.setLinespacing(0);
    HumText_1_1Buffer[0] = 0;
    HumText_1_1.setWildcard(HumText_1_1Buffer);
    HumText_1_1.resizeToCurrentText();
    HumText_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2QA1));

    add(CoolingImage);
    add(FlakeImage);
    add(StandbyImage);
    add(LogoImage);
    add(DropImage);
    add(TempUnitText);
    add(TempFrcText);
    add(TempEntText);
    add(HumPercentText);
    add(HumText);
    add(SettingsButton);
    add(SettingsImage);
    add(HumText_1);
    add(image1);
    add(HumText_1_1);
}

ctnrHomeBase::~ctnrHomeBase()
{

}

void ctnrHomeBase::initialize()
{

}

