/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CTNRHOMEBASE_HPP
#define CTNRHOMEBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextureMapper.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/Image.hpp>

class ctnrHomeBase : public touchgfx::Container
{
public:
    ctnrHomeBase();
    virtual ~ctnrHomeBase();
    virtual void initialize();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::TextureMapper CoolingImage;
    touchgfx::TextureMapper FlakeImage;
    touchgfx::TextureMapper StandbyImage;
    touchgfx::TextureMapper LogoImage;
    touchgfx::TextureMapper DropImage;
    touchgfx::TextArea TempUnitText;
    touchgfx::TextAreaWithOneWildcard TempFrcText;
    touchgfx::TextAreaWithOneWildcard TempEntText;
    touchgfx::TextArea HumPercentText;
    touchgfx::TextAreaWithOneWildcard HumText;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  SettingsButton;
    touchgfx::TextureMapper SettingsImage;
    touchgfx::TextAreaWithOneWildcard HumText_1;
    touchgfx::Image image1;
    touchgfx::TextAreaWithOneWildcard HumText_1_1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEMPFRCTEXT_SIZE = 3;
    touchgfx::Unicode::UnicodeChar TempFrcTextBuffer[TEMPFRCTEXT_SIZE];
    static const uint16_t TEMPENTTEXT_SIZE = 4;
    touchgfx::Unicode::UnicodeChar TempEntTextBuffer[TEMPENTTEXT_SIZE];
    static const uint16_t HUMTEXT_SIZE = 4;
    touchgfx::Unicode::UnicodeChar HumTextBuffer[HUMTEXT_SIZE];
    static const uint16_t HUMTEXT_1_SIZE = 4;
    touchgfx::Unicode::UnicodeChar HumText_1Buffer[HUMTEXT_1_SIZE];
    static const uint16_t HUMTEXT_1_1_SIZE = 4;
    touchgfx::Unicode::UnicodeChar HumText_1_1Buffer[HUMTEXT_1_1_SIZE];

private:

};

#endif // CTNRHOMEBASE_HPP
